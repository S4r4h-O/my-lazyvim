return {
  "saghen/blink.cmp",
  opts = function(_, opts)
    opts.completion = opts.completion or {}
    opts.completion.menu = opts.completion.menu or {}
    opts.completion.menu.draw = opts.completion.menu.draw or {}
    opts.completion.menu.draw.components = opts.completion.menu.draw.components or {}

    local original_kind_icon = opts.completion.menu.draw.components.kind_icon or {}
    local original_text = original_kind_icon.text
    local original_highlight = original_kind_icon.highlight

    opts.completion.menu.draw.components.kind_icon = {
      text = function(ctx)
        if ctx.item.source_name == "LSP" then
          local ok, colors = pcall(require, "nvim-highlight-colors")
          if ok then
            local color_item = colors.format(ctx.item.documentation, { kind = ctx.kind })
            if color_item and color_item.abbr ~= "" then
              return color_item.abbr .. ctx.icon_gap
            end
          end
        end

        if original_text then
          return original_text(ctx)
        end
        return ctx.kind_icon .. ctx.icon_gap
      end,
      highlight = function(ctx)
        if ctx.item.source_name == "LSP" then
          local ok, colors = pcall(require, "nvim-highlight-colors")
          if ok then
            local color_item = colors.format(ctx.item.documentation, { kind = ctx.kind })
            if color_item and color_item.abbr_hl_group then
              return color_item.abbr_hl_group
            end
          end
        end

        if original_highlight then
          return original_highlight(ctx)
        end
        return "BlinkCmpKind" .. ctx.kind
      end,
    }

    return opts
  end,
}
